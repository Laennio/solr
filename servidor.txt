Criar uma instÃ¢ncia Ubuntu 18.04.03 LTS

sudo apt update
sudo apt -y upgrade

python3 -V
sudo apt install -y python3-pip

pip3 install package_name (caso deseje instalar mais pacote)
pip3 install Django
sudo apt install build-essential python3-dev libssl-dev libpq-dev libffi-dev postgresql postgresql-contrib python3-dev nginx curl
sudo apt install -y python3-venv
django-admin --version

Criar ambiente virtual:
python3.6 -m venv venv
====>> source venv/bin/activate
Dentro da venv:
pip install django gunicorn psycopg2-binary
django-admin startproject projeto .
Testando o Servidor de Desenvolvimento
Dentro da venv:
sudo ufw allow 8000
python manage.py runserver 0.0.0.0:8000

http://your_server_ip:8000



sudo -u postgres psql
CREATE DATABASE projeto;
CREATE USER laennio WITH PASSWORD 'password';

ALTER ROLE laennio SET client_encoding TO 'utf8';
ALTER ROLE laennio SET default_transaction_isolation TO 'read committed';
ALTER ROLE laennio SET timezone TO 'UTC';

GRANT ALL PRIVILEGES ON DATABASE projeto TO laennio;

settings.py
ALLOWED_HOSTS = ['64.227.53.16','localhost']
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
DATABASES = {
    'default': {
         'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'projeto',
        'USER': 'laennio',
        'PASSWORD': '*****',
        'HOST': 'localhost',
        'PORT': '',    }
}


Dentro da venv:
python manage.py makemigrations
python manage.py migrate
python manage.py createsuperuser
python manage.py collectstatic

===>>> deactivate

criar
sudo nano /etc/systemd/system/gunicorn.socket
[Unit]
Description=gunicorn socket

[Socket]
ListenStream=/run/gunicorn.sock

[Install]
WantedBy=sockets.target

sudo nano /etc/systemd/system/gunicorn.service
[Unit]
Description=gunicorn daemon
Requires=gunicorn.socket
After=network.target

[Service]
User=root
Group=www-data
WorkingDirectory=/home/projeto
ExecStart=/home/projeto/venv/bin/gunicorn \
          --access-logfile - \
          --workers 3 \
          --bind unix:/run/gunicorn.sock \
          projeto.wsgi:application

[Install]
WantedBy=multi-user.target


sudo systemctl start gunicorn.socket
sudo systemctl enable gunicorn.socket

sudo systemctl status gunicorn.socket
file /run/gunicorn.sock

criar:
/etc/nginx/sites-available/projeto
server {
    listen 80;
    server_name 64.227.53.16;

location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        root /home/projeto;
    }

 location / {
        include proxy_params;
        proxy_pass http://unix:/run/gunicorn.sock;
    }

}

sudo nginx -t
sudo systemctl restart nginx
sudo ufw delete allow 8000
sudo ufw allow 'Nginx Full'

sudo ln -s /etc/nginx/sites-available/projeto /etc/nginx/sites-enabled

ufw allow OpenSSH
ufw enable
ufw status
sudo ufw allow 8983



SOLR:
sudo apt install openjdk-11-jdk
cd /opt
wget http://ftp.unicamp.br/pub/apache/lucene/solr/8.4.1/solr-8.4.1.tgz
tar xzf solr-8.4.1.tgz solr-8.4.1/bin/install_solr_service.sh --strip-components=2
sudo bash ./install_solr_service.sh solr-8.4.1.tgz


sudo service solr stop
sudo service solr start
sudo service solr status

sudo su - solr -c "/opt/solr/bin/solr create -c projeto -n data_driven_schema_configs"

ESSA PARTE NAO FUNCIONOU TESTAR DEPOIS
===================================================
solr no nginx:
server {
  listen 8983;
  server_name 64.227.53.16;
  
  location / {
    proxy_pass http://localhost:8983;
  }
}
ln -s /etc/nginx/sites-available/solr /etc/nginx/sites-enabled/solr
systemctl restart nginx
============================================================
